{"ast":null,"code":"import axios from \"axios\";\nimport Login from '../reducers/login';\nexport var LOGIN = 'LOGIN';\nexport var SIGNUP = 'SIGNUP'; // add new user \n\nexport var logIn = function logIn(username, password) {\n  return {\n    type: LOGIN,\n    info: {\n      username: username,\n      password: password\n    }\n  };\n}; // create thunk creators \n\nexport var signUp = function signUp(first, last, username, password) {\n  return {\n    type: SIGNUP,\n    info: {\n      first: first,\n      last: last,\n      username: username,\n      password: password\n    }\n  };\n}; // sign up middleware, sends post request to express server \n\nexport var loginthunk = function loginthunk(credentials) {\n  return function (dispatch) {\n    axios.post('/api/user', credentials).then(function (user) {\n      dispatch(Login(user));\n    });\n  };\n};\nexport var signupthunk = function signupthunk(credentials) {\n  return function (dispatch) {\n    axios.post('/api/user', credentials).then(function (user) {\n      dispatch(Login(user));\n    });\n  };\n}; // axios request to database \n// once we get a response , call the action creator using the dispatch method \n//thunkmiddleware , applymiddleware","map":{"version":3,"sources":["/Users/Toby/Desktop/mobi/client/src/actions/index.js"],"names":["axios","Login","LOGIN","SIGNUP","logIn","username","password","type","info","signUp","first","last","loginthunk","credentials","dispatch","post","then","user","signupthunk"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,OAAO,IAAMC,KAAK,GAAG,OAAd;AACP,OAAO,IAAMC,MAAM,GAAG,QAAf,C,CAAyB;;AAEhC,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,QAAD,EAAWC,QAAX,EAAwB;AACzC,SAAO;AACHC,IAAAA,IAAI,EAAEL,KADH;AAEHM,IAAAA,IAAI,EAAE;AACFH,MAAAA,QAAQ,EAARA,QADE;AAEFC,MAAAA,QAAQ,EAARA;AAFE;AAFH,GAAP;AAOH,CARM,C,CASP;;AACA,OAAO,IAAMG,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAQC,IAAR,EAAcN,QAAd,EAAwBC,QAAxB,EAAqC;AACvD,SAAO;AACHC,IAAAA,IAAI,EAAEJ,MADH;AAEHK,IAAAA,IAAI,EAAE;AACFE,MAAAA,KAAK,EAALA,KADE;AAEFC,MAAAA,IAAI,EAAJA,IAFE;AAGFN,MAAAA,QAAQ,EAARA,QAHE;AAIFC,MAAAA,QAAQ,EAARA;AAJE;AAFH,GAAP;AASH,CAVM,C,CAYP;;AACA,OAAO,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAACC,WAAD;AAAA,SAAiB,UAACC,QAAD,EAAc;AACrDd,IAAAA,KAAK,CAACe,IAAN,CAAW,WAAX,EAAwBF,WAAxB,EACCG,IADD,CACM,UAAAC,IAAI,EAAI;AACVH,MAAAA,QAAQ,CAACb,KAAK,CAACgB,IAAD,CAAN,CAAR;AACH,KAHD;AAIH,GALyB;AAAA,CAAnB;AAOP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACL,WAAD;AAAA,SAAiB,UAACC,QAAD,EAAc;AACtDd,IAAAA,KAAK,CAACe,IAAN,CAAW,WAAX,EAAwBF,WAAxB,EACCG,IADD,CACM,UAAAC,IAAI,EAAI;AACVH,MAAAA,QAAQ,CAACb,KAAK,CAACgB,IAAD,CAAN,CAAR;AACH,KAHD;AAIH,GAL0B;AAAA,CAApB,C,CAOP;AACA;AACA","sourcesContent":["import axios from \"axios\";\nimport Login from '../reducers/login'\n\nexport const LOGIN = 'LOGIN';\nexport const SIGNUP = 'SIGNUP'; // add new user \n\nexport const logIn = (username, password) => {\n    return {\n        type: LOGIN,\n        info: {\n            username, \n            password, \n        }\n    }\n}\n// create thunk creators \nexport const signUp = (first, last, username, password) => {\n    return {\n        type: SIGNUP,\n        info: {\n            first,\n            last, \n            username, \n            password,\n        }\n    }\n}\n\n// sign up middleware, sends post request to express server \nexport const loginthunk = (credentials) => (dispatch) => {\n    axios.post('/api/user', credentials)\n    .then(user => {\n        dispatch(Login(user))\n    })\n}\n\nexport const signupthunk = (credentials) => (dispatch) => {\n    axios.post('/api/user', credentials)\n    .then(user => {\n        dispatch(Login(user))\n    })\n}\n\n// axios request to database \n// once we get a response , call the action creator using the dispatch method \n//thunkmiddleware , applymiddleware"]},"metadata":{},"sourceType":"module"}