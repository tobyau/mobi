{"ast":null,"code":"import _toConsumableArray from \"/Users/Toby/Desktop/mobi/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/Toby/Desktop/mobi/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { LOGIN, SIGNUP } from '../actions';\nvar initialState = {\n  user: [],\n  //login: false,\n  signup: false\n};\n\nvar Login = function Login() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var newState = _objectSpread({}, state);\n\n  var array = _toConsumableArray(newState.user);\n\n  switch (action.type) {\n    // pushes new user into user array\n    // also want to add user to database \n    case SIGNUP:\n      array.push(action.info);\n      newState.user = array;\n      newState.signup = true;\n      return newState;\n    // finds user and sets user array to single user\n    // sets login to true \n\n    case LOGIN:\n      array = array.filter(function (element) {\n        return element.username === action.username;\n      });\n      newState.user = array;\n      newState.login = true;\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/Toby/Desktop/mobi/client/src/reducers/login.js"],"names":["LOGIN","SIGNUP","initialState","user","signup","Login","state","action","newState","array","type","push","info","filter","element","username","login"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,MAAhB,QAA8B,YAA9B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjB;AACAC,EAAAA,MAAM,EAAE;AAHS,CAArB;;AAMA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC5C,MAAMC,QAAQ,qBAAOF,KAAP,CAAd;;AACA,MAAIG,KAAK,sBAAOD,QAAQ,CAACL,IAAhB,CAAT;;AACA,UAAQI,MAAM,CAACG,IAAf;AACI;AACA;AACA,SAAKT,MAAL;AACIQ,MAAAA,KAAK,CAACE,IAAN,CAAWJ,MAAM,CAACK,IAAlB;AACAJ,MAAAA,QAAQ,CAACL,IAAT,GAAgBM,KAAhB;AACAD,MAAAA,QAAQ,CAACJ,MAAT,GAAkB,IAAlB;AACA,aAAOI,QAAP;AACJ;AACA;;AACA,SAAKR,KAAL;AACIS,MAAAA,KAAK,GAAGA,KAAK,CAACI,MAAN,CAAa,UAACC,OAAD;AAAA,eAAaA,OAAO,CAACC,QAAR,KAAqBR,MAAM,CAACQ,QAAzC;AAAA,OAAb,CAAR;AACAP,MAAAA,QAAQ,CAACL,IAAT,GAAgBM,KAAhB;AACAD,MAAAA,QAAQ,CAACQ,KAAT,GAAiB,IAAjB;AACA,aAAOR,QAAP;;AAEJ;AACI,aAAOF,KAAP;AAjBR;AAmBH,CAtBD;;AAwBA,eAAeD,KAAf","sourcesContent":["import { LOGIN, SIGNUP } from '../actions';\n\nconst initialState = {\n    user: [],\n    //login: false,\n    signup: false\n}\n\nconst Login = (state = initialState, action) => {\n    const newState = {...state};\n    let array = [...newState.user];\n    switch (action.type) {\n        // pushes new user into user array\n        // also want to add user to database \n        case SIGNUP:\n            array.push(action.info);\n            newState.user = array;\n            newState.signup = true;\n            return newState; \n        // finds user and sets user array to single user\n        // sets login to true \n        case LOGIN:\n            array = array.filter((element) => element.username === action.username);\n            newState.user = array;\n            newState.login = true;\n            return newState;\n            \n        default: \n            return state;\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}