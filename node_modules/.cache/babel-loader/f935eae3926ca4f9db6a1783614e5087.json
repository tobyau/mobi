{"ast":null,"code":"import _toConsumableArray from \"/home/mnurilov/mobi/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/mnurilov/mobi/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport {\n/*LOGIN, */\nSIGNUP } from '../actions';\nvar initialState = {\n  user: [],\n  login: false //signup: false\n\n};\n\nvar Login = function Login() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var newState = _objectSpread({}, state);\n\n  var array = _toConsumableArray(newState.user);\n\n  switch (action.type) {\n    // pushes new user into user array\n    // also want to add user to database \n    case SIGNUP:\n      array.push(action.info);\n      newState.user = array;\n      return newState;\n    // finds user and sets user array to single user\n    // sets login to true \n\n    /*\n    case LOGIN:\n        array = array.filter((element) => element.username === action.username);\n        newState.user = array;\n        newState.login = true;\n        return newState;\n        */\n\n    default:\n      return state;\n  }\n}; // ideally want to combineReducers for multiple reducers \n\n\nexport default Login;","map":{"version":3,"sources":["/home/mnurilov/mobi/src/reducers/login.js"],"names":["SIGNUP","initialState","user","login","Login","state","action","newState","array","type","push","info"],"mappings":";;AAAA;AAAS;AAAYA,MAArB,QAAmC,YAAnC;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,KAAK,EAAE,KAFU,CAGjB;;AAHiB,CAArB;;AAMA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC5C,MAAMC,QAAQ,qBAAOF,KAAP,CAAd;;AACA,MAAIG,KAAK,sBAAOD,QAAQ,CAACL,IAAhB,CAAT;;AACA,UAAQI,MAAM,CAACG,IAAf;AACI;AACA;AACA,SAAKT,MAAL;AACIQ,MAAAA,KAAK,CAACE,IAAN,CAAWJ,MAAM,CAACK,IAAlB;AACAJ,MAAAA,QAAQ,CAACL,IAAT,GAAgBM,KAAhB;AACA,aAAOD,QAAP;AACJ;AACA;;AACA;;;;;;;;AAOA;AACI,aAAOF,KAAP;AAjBR;AAmBH,CAtBD,C,CAwBA;;;AACA,eAAeD,KAAf","sourcesContent":["import { /*LOGIN, */ SIGNUP } from '../actions';\n\nconst initialState = {\n    user: [],\n    login: false,\n    //signup: false\n}\n\nconst Login = (state = initialState, action) => {\n    const newState = {...state};\n    let array = [...newState.user];\n    switch (action.type) {\n        // pushes new user into user array\n        // also want to add user to database \n        case SIGNUP:\n            array.push(action.info);\n            newState.user = array;\n            return newState; \n        // finds user and sets user array to single user\n        // sets login to true \n        /*\n        case LOGIN:\n            array = array.filter((element) => element.username === action.username);\n            newState.user = array;\n            newState.login = true;\n            return newState;\n            */\n        default: \n            return state;\n    }\n}\n\n// ideally want to combineReducers for multiple reducers \nexport default Login;"]},"metadata":{},"sourceType":"module"}